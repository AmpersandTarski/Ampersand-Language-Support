{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"scopeName": "source.ampersand",
	"name": "Ampersand (ADL)",
	"patterns":
	[	{ "comment": "to be reviewed using https://www.sublimetext.com/docs/3/scope_naming.html"},
		{	"include": "#comments"   },
		{	"include": "#purposes"   },
		{	"include": "#includes"   },
		{	"include": "#concepts"   },
		{	"include": "#relations"  },
		{	"include": "#rules"      },
		{	"include": "#interfaces" },
		{	"include": "#views"      },
		{	"include": "#keywords"   },
		{	"include": "#strings"    },
		{	"include": "#operators"  },
		{	"include": "#IV"         }
	],
	"repository": 
	{	"comments":
		{	"patterns": 
			[	{	"comment":"-- line comment",
					"name": "comment.line.double-dash.ampersand",
					"begin": "--",
					"beginCaptures": { "0": { "name": "punctuation.comment.line.double-dash.ampersand" } },
					"end": "$",
					"patterns": [ {"include": "#comment patterns"} ]
				},
				{	"comment":"{- block comment -}",
					"name": "comment.block.ampersand",
					"begin": "{-",
					"beginCaptures": { "0": { "name": "punctuation.comment.block.ampersand" } },
					"end": "-}",
					"endCaptures": { "0": { "name": "punctuation.comment.block.ampersand" } },
					"patterns": [ {"include": "#comment patterns"} ]
				},
				{	"comment":"text after `ENDCONTEXT` is comment",
					"name": "comment.ampersand",
					"begin": "(?<=ENDCONTEXT)\\s*",
					"end": "\\b(?=CONTEXT\\b)",
					"patterns": [ {"include": "#comment patterns"} ]
				}
			]
		}
		, "comment patterns":
		{	"patterns": 
			[	{	"comment":"**highlighted**",
					"match": "\\*\\*(.*?)\\*\\*",
					"captures": { "0": { "name":"highlight.ampersand"} }
				},
				{	"comment":"`backticked`",
					"match": "`([^`]*)`",
					"captures": { "1": { "name":"backticked.ampersand"}	}
				},
				{	"comment":"<protocol>://<domainname><Etc>",
					"match": "\\w+:(\/?\/?)[^\\s]+",
					"captures": {
						"0": { "name":"url.ampersand"}
					}
				},
				{	"comment":"file: \"filename\"",
					"match": "file:?\\s*(\")([^\"]*)(\")",
					"captures": {
						"1": { "name":"punctuation.string.ampersand"},
						"2": { "name":"filename.ampersand"},
						"3": { "name":"punctuation.string.ampersand"}
					}
				},
				{	"comment":"Issue: #nnn",
					"match": "\\b(|[Ii]ssue:?\\s*)(#[0-9]{1,5})\\b",
					"captures": {
						"2": { "name":"issue.ampersand"}
					}
				}
			]
		}
		, "purposes":
		{	"patterns":[
				{	"comment":"PURPOSE <keyword> \"<identifier>\" -- tnx to https://github.com/Microsoft/vscode-textmate/issues/41",
					"name": "statement.purpose.quoted-string.ampersand",
					"begin": "\\b(PURPOSE)\\s+(CONTEXT|CONCEPT|RELATION|RULE)\\s+(\")([^\"]*)(\")\\s*",
					"beginCaptures": {
						"0": { "name":"statement.purpose.begincapture1.ampersand"},
						"1": { "name":"keyword.other.ampersand"},
						"2": { "name":"keyword.other.ampersand"},
						"3": { "name":"punctuation.purpose.ampersand"},
						"4": { "name":"use.identifier.ampersand"},
						"5": { "name":"punctuation.purpose.ampersand"}
					},
					"end": "(?<=\\+})",
					"patterns": [
						{	"comment":"inside {+ section",
							"name": "comment.block.documentation.ampersand",
							"begin": "{\\+",
							"beginCaptures": { "0": { "name": "punctuation.comment.block.ampersand" } },
							"end": "\\+}",
							"endCaptures": { "0": { "name": "punctuation.comment.block.ampersand" } },
							"patterns": [ {"include": "#comment patterns"} ]
						},
						{	"comment":"outside {+ section",
							"name": "invalid.illegal.ampersand",
							"begin": "\\s*([^{]|{[^\\+])",
							"end": "\\bENDCONTEXT"
						}
					]
				}
			]
		}
		, "includes":
		{	"patterns": 
			[	{	"match": "\\b(INCLUDE)\\s*(\")([^\"]*)(\")",
					"captures": {
						"0": { "name":"statement.include.ampersand"},
						"1": { "name":"keyword.other.ampersand"},
						"2": { "name":"punctuation.string.ampersand"},
						"3": { "name":"filename.ampersand"},
						"4": { "name":"punctuation.string.ampersand"}
					}
				}
			]
		}
		, "concepts":
		{	"patterns": 
			[	{	"comment": "CONCEPT <Concept> \"explanatory text\" \"reftext\"",
					"match": "\\b(CONCEPT)\\s*([A-Z][_A-Za-z0-9]*)\\s*(\")([^\"]*)(\")\\s*(\")([^\"]*)(\")",
					"captures": {
						"0": { "name":"statement.definition.conceptref.ampersand"},
						"1": { "name":"keyword.other.ampersand"},
						"2": { "name":"definition.concept.ampersand"},
						"3": { "name":"punctuation.definition.concept.ampersand"},
						"4": { "name":"string.quoted.double.definition.concept.ampersand"},
						"5": { "name":"punctuation.definition.concept.ampersand"},
						"6": { "name":"punctuation.definition.concept.ampersand"},
						"7": { "name":"string.quoted.double.definition.concept.ampersand"},
						"8": { "name":"punctuation.definition.concept.ampersand"}
					}
				},
				{	"comment": "CONCEPT <Concept> \"explanatory text\"",
					"match": "\\b(CONCEPT)\\s*([A-Z][_A-Za-z0-9]*)\\s*(\")([^\"]*)(\")",
					"captures": {
						"0": { "name":"statement.definition.concept.ampersand"},
						"1": { "name":"keyword.other.ampersand"},
						"2": { "name":"definition.concept.ampersand"},
						"3": { "name":"punctuation.definition.concept.ampersand"},
						"4": { "name":"string.quoted.double.definition.concept.ampersand"},
						"5": { "name":"punctuation.definition.concept.ampersand"}
					}
				}
			]
		}
		, "relations":
		{	"patterns": 
			[	{	"comment": "relation :: Concept1 * Concept2",
					"match": "\\b([a-z][_A-Za-z0-9]*)\\s*(::)\\s*([A-Z][_A-Za-z0-9]*)\\s*(\\*)\\s*([A-Z][_A-Za-z0-9]*)",
					"captures": {
						"0": { "name":"statement.definition.relation.ampersand"},
						"1": { "name":"definition.relation.ampersand"},
						"2": { "name":"punctuation.definition.relation.ampersand"},
						"3": { "name":"use.concept.ampersand"},
						"4": { "name":"punctuation.definition.relation.ampersand"},
						"5": { "name":"use.concept.ampersand"}
					}
				},
				{	"comment": "RELATION relname [Concept1 * Concept2]",
					"match": "\\b(RELATION)\\s*([a-z][_A-Za-z0-9]*)\\s*(\\[)\\s*([A-Z][_A-Za-z0-9]*)\\s*(\\*)\\s*([A-Z][_A-Za-z0-9]*)(\\])",
					"captures": {
						"0": { "name":"statement.definition.relation.ampersand"},
						"1": { "name":"punctuation.definition.relation.ampersand"},
						"2": { "name":"definition.relation.ampersand"},
						"3": { "name":"punctuation.definition.relation.ampersand"},
						"4": { "name":"use.concept.ampersand"},
						"5": { "name":"punctuation.definition.relation.ampersand"},
						"6": { "name":"use.concept.ampersand"},
						"7": { "name":"punctuation.definition.relation.ampersand"}
					}
				},
				{	"comment": "[multiplicities]",
					"name": "keyword.control.multiplicity.ampersand",
					"match": "\\[(\\s*(INJ|SUR|UNI|TOT|SYM|ASY|RFX|IRF|TRN|PROP))(\\s*,\\s*(INJ|SUR|UNI|TOT|SYM|ASY|RFX|IRF|TRN|PROP))*\\s*\\]"
				}
			]
		}
		, "rules":
		{	"patterns": [
				{	"comment": "IDENT rule definition",
					"name":"statement.ident.rule.ampersand",
					"begin": "\\b(IDENT)\\s+(|\")([^\"]+)(\\2)\\s*(:)\\s*([A-Z][_A-Za-z0-9]*)\\s*(\\()",
					"beginCaptures": {
						"0": { "name":"statement.ident.rule.begin.ampersand"},
						"1": { "name":"keyword.other.ampersand"},
						"2": { "name":"punctuation.definition.rule.ampersand"},
						"3": { "name":"definition.rule.ampersand"},
						"4": { "name":"punctuation.definition.rule.ampersand"},
						"5": { "name":"punctuation.definition.rule.ampersand"},
						"6": { "name":"use.concept.ampersand"},
						"7": { "name":"punctuation.definition.rule.ampersand"}						
					},
					"end": "(?<=\\))",
					"patterns": [
						{	"include": "#term" },
						{	"name": "keyword.term.operator.ampersand",
							"match": "((?<!-)-(?!-)|~|\\+|;|!|\\*|\\\\/|/\\\\|\\\\|/|<>)"
						},
						{	"name": "invalid.illegal.expected-term-operator.ampersand",
							"match": "[^\\s\\)]"
						}
					]
				},
				{	"comment": "RULE definition",
					"name":"statement.definition.rule.ampersand",
					"begin": "\\b(RULE)\\s+(\")([^\"]*)(\")\\s*(:)",
					"beginCaptures": {
						"0": { "name":"statement.definition.rule.begin.ampersand"},
						"1": { "name":"keyword.other.ampersand"},
						"2": { "name":"punctuation.definition.rule.ampersand"},
						"3": { "name":"definition.rule.ampersand"},
						"4": { "name":"punctuation.definition.rule.ampersand"},
						"5": { "name":"punctuation.definition.rule.ampersand"}
					},
					"end": "^(?=[^\\|\\s])",
					"patterns": [
						{	"include": "#rulexpr" },
						{	"name": "keyword.term.operator.ampersand",
							"match": "((?<!-)-(?!-)|~|\\+|;|!|\\*|\\\\/|/\\\\|\\\\|/|<>)"
						},
						{	"name": "invalid.illegal.expected-term-operator.ampersand",
							"match": "[^\\s\\)]"
						}
					]
				},
				{	"comment":"ROLE <role> MAINTAINS <rulename>",
					"name":"statement.role.maintains.rule.ampersand",
					"match": "\\b(ROLE)\\s+([A-Z][_A-Za-z0-9]*)\\s+(MAINTAINS)\\s+(\")([^\"]*)(\")",
					"captures": {
						"1": { "name":"keyword.other.ampersand"},
						"2": { "name":"use.role.ampersand"},
						"3": { "name":"keyword.other.ampersand"},
						"4": { "name":"punctuation.rule.ampersand"},
						"5": { "name":"string.quoted.double.ampersand"},
						"6": { "name":"punctuation.rule.ampersand"}
					}
				},
				{	"comment":"VIOLATIONs",
					"name": "comment.block.ampersand",
					"begin": "{-",
					"beginCaptures": { "0": { "name": "punctuation.definition.comment.block.ampersand" } },
					"end": "-}",
					"endCaptures": { "0": { "name": "punctuation.definition.comment.block.ampersand" } },
					"patterns": [ {"include": "#comment patterns"} ]
				}
			]
		},
        "rulexpr": {
			"name": "meta.structure.rulexpr.ampersand",
            "patterns":[
                {	"include": "#term" },
				{	"include": "#ruleoperator" },
				{	"name": "invalid.illegal.expected-rulexpr-operator.ampersand",
					"match": "[^\\s]"
				}
            ]
        },
		"ruleoperator": {
			"patterns": [
				{	"name": "keyword.rulexpr.operator.ampersand",
					"match": "(\\|-|=)"
				}
			]
		},
		"termoperator": {
			"patterns": [
				{	"name": "keyword.term.operator.ampersand",
					"match": "((?<!-)-(?!-)|~|\\+|;|!|\\*|\\\\/|/\\\\|\\\\|/|<>)"
				}
			]
		},
		"term": {
			"name": "meta.structure.term.ampersand",
            "patterns": [
				{	"include": "#comments" },
				{	"include": "#parentheset" },
				{ 	"include": "#relname" },
				{ 	"include": "#IV" },
				{ 	"include": "#atom" },
				{ 	"include": "#termoperator" }
			]
        },
        "relname": {
			"name": "meta.structure.relname.ampersand",
			"patterns": [
            	{ 	"name": "use.relation.ampersand",
            		"match": "[a-z][_A-Za-z0-0]*"
				}
			]
		},
		"IV": {
			"name": "meta.structure.iv.ampersand",
			"patterns": [
				{	"comment": "V, I",
					"match": "(?<!['])\\b[IV]\\b(?!\\[)",
					"name": "constant.character.iv.ampersand"
				},
				{	"comment": "I[Concept], V[Concept]",
					"match": "(?<!['])\\b([IV])\\s*(\\[)\\s*([A-Z][_A-Za-z0-9]*)\\s*(\\])",
					"captures": {
						"1": { "name":"constant.character.iv.ampersand"},
						"2": { "name":"punctuation.bracket.square.ampersand"},
						"3": { "name":"use.concept.ampersand"},
						"4": { "name":"punctuation.bracket.square.ampersand"}
					}
				},
				{	"comment": "V[Concept*Concept]",
					"match": "(?<!['])\\b(V)\\s*(\\[)\\s*([A-Z][_A-Za-z0-9]*)\\s*(\\*)\\s*([A-Z][_A-Za-z0-9]*)\\s*(\\])",
					"captures": {
						"1": { "name":"constant.character.iv.ampersand"},
						"2": { "name":"punctuation.bracket.square.ampersand"},
						"3": { "name":"use.concept.ampersand"},
						"4": { "name":"punctuation.character.ampersand"},
						"5": { "name":"use.concept.ampersand"},
						"6": { "name":"punctuation.bracket.square.ampersand"}
					}
				}
			]
		},
        "atom": {
			"name": "meta.structure.atom.ampersand",
            "patterns": [
				{   "comment": "integer",
					"name": "use.atom.integer.ampersand",
					"match": "\\b\\d+\\b"
				},
				{   "comment": "float",
					"name": "use.atom.float.ampersand",
					"match": "\\b\\d+(\\.\\d*)?\\b"
				},
				{   "comment": "boolean",
					"name": "use.atom.boolean.ampersand",
					"match": "\\b(?:true|false|null)\\b"
				},
				{   "comment": "date",
					"name": "use.atom.date.ampersand",
					"match": "\\b(\\d\\d){1,2}-(\\d\\d)-(\\d\\d){1,2}\\b"
				},
				{   "comment": "datetime",
					"name": "use.atom.datetime.ampersand",
					"match": "\\bto be done\\b"
				},
				{   "comment": "string",
					"match": "(\")([^\"\\\\]*)(\")",
					"captures": {
						"1": { "name":"punctuation.string.ampersand"},
						"2": { "name":"use.atom.string.ampersand"},
						"3": { "name":"punctuation.string.ampersand"}
					}
				},
				{   "comment": "specials",
					"match": "(\")(ONE|_SESSION)(\")",
					"captures": {
						"1": { "name":"punctuation.string.ampersand"},
						"2": { "name":"use.atom.specials.ampersand"},
						"3": { "name":"punctuation.string.ampersand"}
					}
				}
			]
		},
"parentheset": {
			"patterns": [
				{   "name": "meta.structure.parentheset.ampersand",
					"begin": "\\(",
					"beginCaptures": { "0": { "name": "punctuation.definition.parentheset.begin.ampersand" } },
					"end": "\\)",
					"endCaptures": { "0": { "name": "punctuation.definition.parentheset.end.ampersand" } },
					"patterns": [
						{	"include": "#term" },
						{	"include": "#termoperator" },
						{	"name": "invalid.illegal.expected-term-operator.ampersand",
							"match": "[^\\s\\)]"
						}
					]
				}
			]
		},
		"interfaces":
		{	"patterns": 
			[	{	"match": "\\b(INTERFACE)\\s+(\")([^\"]*)(\")\\s*(|(FOR)([^:]*))(:)",
					"captures": {
						"1": { "name":"keyword.other.ampersand"},
						"2": { "name":"keyword.other.ampersand"},
						"3": { "name":"definition.interface.ampersand"},
						"4": { "name":"keyword.other.ampersand"},
						"5": { "name":"keyword.other.ampersand"},
						"6": { "name":"use.role.ampersand"}
					}
				}
			]
		}
		,	"views":
		{	"patterns": 
			[	{	"match": "\\b(VIEW)\\s+([^:]*)(:)",
					"captures": {
						"1": { "name":"keyword.other.ampersand"},
						"2": { "name":"definition.view.ampersand"},
						"3": { "name":"keyword.other.ampersand"}
					}
				}
			]
		}
	,	"keywords":
		{	"patterns": 
			[	{	"name": "keyword.control.block.ampersand",
					"match": "\\b(CONTEXT|IN|DUTCH|ENGLISH|ENDCONTEXT|PATTERN|ENDPATTERN|PROCESS|ENDPROCESS|SERVICE|ENDSERVICE|LATEX|MARKDOWN)\\b"
				},
				{	"name": "keyword.control.others.ampersand",
					"match": "\\b(THEMES|META|BYPLUG)\\b"
				},
				{	"name": "keyword.control.concepts.ampersand",
					"match": "\\b(CLASSIFY|SPEC|ISA|IS)\\b"
				},
				{	"name": "keyword.control.represents.ampersand",
					"match": "\\b(REPRESENT|TYPE|ALPHANUMERIC|BIGALPHANUMERIC|HUGEALPHANUMERIC|PASSWORD|BINARY|BIGBINARY|HUGEBINARY|DATE|DATETIME|BOOLEAN|INTEGER|FLOAT)\\b"
				},
				{	"name": "keyword.control.views.ampersand",
					"match": "\\b(VIEW|ENDVIEW|REST|HTML|TEMPLATE)\\b"
				},
				{	"name": "keyword.control.interfaces.ampersand",
					"match": "\\b(LINKTO|INTERFACE|GUI|API|FOR|ROWS|TABS|COLS)\\b"
				},
				{	"name": "keyword.control.boxes.ampersand",
					"match": "\\bBOX(|\\s*<(DIV|TABS|ROWS|ROWSNL|HROWS|COLS|COLSNL|HCOLS|SCOLS|SHCOLS|SPCOLS|SPHCOLS|PANELS|PROPBUTTON|STRONG)>)"
				},
				{	"name": "keyword.control.crud.ampersand",
					"match": "\\b[Cc][Rr][Uu][Dd]\\b"
				},
				{	"name": "keyword.control.view.ampersand",
					"match": "\\b\\<[^\\>]+\\>\\b"
				}
			]
		}
	,	"strings":
		{	"name": "string.quoted.double.ampersand",
			"begin": "(?<!\\\\)\"",
			"end": "(?<!\\\\)\"",
			"patterns":
			[	{	"name": "constant.character.escape.ampersand",
					"match": "\\\\."
				}
			]
		}
	}	
}